openapi: 3.0.0
info:
  title: TaskFlow Management API
  description: API for managing users and tasks
  version: 1.0.0
servers:
  - url: https://task-flow-ovf1.onrender.com
    description: Local server
paths:
  /api/users:
    get:
      summary: Get all users
      tags:
        - Users
      responses:
        200:
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        500:
          description: Error retrieving users

  /api/auth/signup:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSignup"
      responses:
        201:
          description: User registered successfully
        400:
          description: Email already in use
        500:
          description: Registration failed

  /api/auth/signin:
    post:
      summary: Login a user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        200:
          description: Login successful
        401:
          description: Invalid credentials
        500:
          description: Login failed

  /api/auth/forgot-password:
    post:
      summary: Send password reset code
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        200:
          description: Reset code sent to email
        404:
          description: User not found
        500:
          description: Error sending reset code

  /api/auth/reset-password:
    post:
      summary: Reset password
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetPassword"
      responses:
        200:
          description: Password reset successful
        400:
          description: Invalid or expired reset code
        500:
          description: Password reset failed

  /api/users/{id}:
    put:
      summary: Update a user
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
      responses:
        200:
          description: User updated successfully
        404:
          description: User not found
        500:
          description: Error updating user

  /api/tasks/{filter}/{userId}:
    get:
      summary: Get tasks for a user
      tags:
        - Tasks
      parameters:
        - name: filter
          in: path
          required: true
          schema:
            type: string
            enum: [all, today, tomorrow, upcoming]
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Tasks retrieved successfully
        404:
          description: No tasks found
        500:
          description: Error retrieving tasks

  /api/tasks/project/{projectId}:
    get:
      summary: Get tasks by project
      tags:
        - Tasks
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Tasks for the project retrieved successfully
        404:
          description: No tasks found
        500:
          description: Error retrieving tasks

  /api/tasks:
    post:
      summary: Create a new task
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      responses:
        201:
          description: Task created successfully
        500:
          description: Error creating task

  /api/tasks/{userId}/{id}:
    delete:
      summary: Delete a task
      tags:
        - Tasks
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Task deleted successfully
        403:
          description: Unauthorized deletion
        404:
          description: Task not found
        500:
          description: Error deleting task

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
    UserSignup:
      type: object
      required: [username, email, password]
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
    UserLogin:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
        password:
          type: string
    ResetPassword:
      type: object
      required: [email, resetCode, newPassword]
      properties:
        email:
          type: string
        resetCode:
          type: string
        newPassword:
          type: string
    Task:
      type: object
      required: [title, userId, dueDate]
      properties:
        title:
          type: string
        description:
          type: string
        userId:
          type: string
        users:
          type: array
          items:
            type: string
        dueDate:
          type: string
          format: date-time
        status:
          type: string
          enum: [to-do, in-progress, completed]
    TaskUpdate:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        users:
          type: array
          items:
            type: string
